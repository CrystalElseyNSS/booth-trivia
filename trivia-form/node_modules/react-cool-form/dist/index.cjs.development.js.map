{"version":3,"file":"index.cjs.development.js","sources":["../src/hooks/useLatest.ts","../src/utils/arrayToMap.ts","../src/utils/isObject.ts","../src/utils/isFileList.ts","../src/utils/cloneObject.ts","../src/utils/deepMerge.ts","../src/utils/isPlainObject.ts","../src/utils/isUndefined.ts","../src/utils/filterErrors.ts","../src/utils/get.ts","../src/utils/getIsDirty.ts","../src/utils/isCheckboxInput.ts","../src/utils/isEmptyObject.ts","../src/utils/isFieldElement.ts","../src/utils/isFileInput.ts","../src/utils/isFunction.ts","../src/utils/isInputElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/isNumberInput.ts","../src/utils/isRadioInput.ts","../src/utils/isRangeInput.ts","../src/utils/runWithLowPriority.ts","../src/utils/set.ts","../src/utils/setTrueValues.ts","../src/utils/unset.ts","../src/utils/warn.ts","../src/hooks/useState.ts","../src/hooks/useIsoLayoutEffect.ts","../src/useForm.ts"],"sourcesContent":["import { MutableRefObject, useRef, useEffect } from \"react\";\n\nexport default <T>(val: T): MutableRefObject<T> => {\n  const ref = useRef(val);\n\n  useEffect(() => {\n    ref.current = val;\n  });\n\n  return ref;\n};\n","import { Map } from \"../types\";\n\nexport default (array: any[]): Map =>\n  array.reduce((obj, key) => {\n    obj[key] = true;\n    return obj;\n  }, {});\n","export default (value: unknown): value is Object =>\n  value !== null && typeof value === \"object\";\n","export default (value: unknown): value is FileList => value instanceof FileList;\n","import isObject from \"./isObject\";\nimport isFileList from \"./isFileList\";\n\nconst cloneObject = (object: unknown): any => {\n  if (!isObject(object) || isFileList(object)) return object;\n\n  if (object instanceof Date) return new Date(object.getTime());\n\n  if (Array.isArray(object)) return object.map((val) => cloneObject(val));\n\n  if (isObject(object))\n    return Object.keys(object).reduce((obj: Record<string, any>, key) => {\n      obj[key] = cloneObject((object as Record<string, any>)[key]);\n      return obj;\n    }, {});\n\n  throw new Error(\"Unable to clone object.\");\n};\n\nexport default cloneObject;\n","import isObject from \"./isObject\";\n\nconst deepMerge = (...objects: any[]): any =>\n  objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key) => {\n      const prevValue = prev[key];\n      const currValue = obj[key];\n\n      if (Array.isArray(prevValue) && Array.isArray(currValue)) {\n        prev[key] = [...prevValue, ...currValue];\n      } else if (isObject(prevValue) && isObject(currValue)) {\n        prev[key] = deepMerge(prevValue, currValue);\n      } else {\n        prev[key] = currValue;\n      }\n    });\n\n    return prev;\n  }, {});\n\nexport default deepMerge;\n","import isObject from \"./isObject\";\n\nexport default (value: unknown): value is Object =>\n  !Array.isArray(value) && isObject(value);\n","export default (value: unknown): value is undefined => value === undefined;\n","import isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\n\nconst filterErrors = (error: unknown, touched: unknown): any => {\n  if (!isPlainObject(error) || error instanceof Date)\n    return touched ? error : undefined;\n\n  return Object.keys(error).reduce((obj: Record<string, any>, key) => {\n    const nextErrors = filterErrors(\n      (error as Record<string, any>)[key],\n      (touched as Record<string, any>)[key] || false\n    );\n\n    if (!isUndefined(nextErrors)) {\n      obj[key] = nextErrors;\n    } else {\n      delete obj[key];\n    }\n\n    return obj;\n  }, {});\n};\n\nexport default filterErrors;\n","import isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (object: any, path: string, defaultValue?: unknown): any => {\n  if (!isPlainObject(object) || !path) return defaultValue;\n\n  const value = path\n    .split(/[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((obj, key) => (obj || {})[key], object);\n\n  return isUndefined(value) ? defaultValue : value;\n};\n","import isPlainObject from \"./isPlainObject\";\n\nconst getIsDirty = (object: object): boolean => {\n  const search = (object: object, found: any[] = []) => {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const obj of Object.values(object)) {\n      if (obj === true) {\n        found.push(obj);\n        return found;\n      }\n\n      if (isPlainObject(obj)) search(obj, found);\n    }\n\n    return found;\n  };\n\n  return !!search(object).length;\n};\n\nexport default getIsDirty;\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"checkbox\";\n","import isPlainObject from \"./isPlainObject\";\n\nexport default (value: unknown): value is Record<string, never> =>\n  isPlainObject(value) && !Object.keys(value).length;\n","import { FieldElement } from \"../types\";\n\nexport default (element: HTMLElement): element is FieldElement =>\n  /INPUT|TEXTAREA|SELECT/.test(element.tagName);\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"file\";\n","export default (value: unknown): value is Function =>\n  typeof value === \"function\";\n","export default (element: HTMLElement): element is HTMLInputElement =>\n  element.tagName === \"INPUT\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLSelectElement =>\n  field.type === \"select-multiple\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"number\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"radio\";\n","import { FieldElement } from \"../types\";\n\nexport default (field: FieldElement): field is HTMLInputElement =>\n  field.type === \"range\";\n","export default (callback: (args: any) => any): any =>\n  (\n    window.requestIdleCallback ||\n    ((callback) => {\n      const start = Date.now();\n      return setTimeout(\n        () =>\n          callback({\n            didTimeout: false,\n            timeRemaining: () => Math.max(0, 50 - (Date.now() - start)),\n          }),\n        1\n      );\n    })\n  )(callback, { timeout: 2000 });\n","import cloneObject from \"./cloneObject\";\nimport isObject from \"./isObject\";\nimport isPlainObject from \"./isPlainObject\";\n\nexport default (\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  object: any,\n  path: string,\n  value: unknown,\n  immutable = false\n): any => {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n\n  const segs = String(path)\n    .split(/[.[\\]]+/)\n    .filter(Boolean);\n  const newObject = immutable ? cloneObject(object) : object;\n\n  segs.slice(0, -1).reduce((obj, key, idx) => {\n    if (isObject(obj[key])) return obj[key];\n    const next = Number(segs[idx + 1]);\n    obj[key] = Number.isInteger(next) && next >= 0 ? [] : {};\n    return obj[key];\n  }, newObject)[segs[segs.length - 1] || \"\"] = value;\n\n  return newObject;\n};\n","import { Map } from \"../types\";\nimport set from \"./set\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (object: any, names: string[]): Map =>\n  names.reduce((obj, name) => {\n    obj = set(obj, name, true, true);\n    return obj;\n  }, object);\n","import cloneObject from \"./cloneObject\";\nimport get from \"./get\";\nimport isPlainObject from \"./isPlainObject\";\nimport isUndefined from \"./isUndefined\";\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport default (object: any, path: string, immutable = false): any => {\n  if (!isPlainObject(object)) throw new TypeError(\"Expected an object.\");\n\n  const refObject = immutable ? cloneObject(object) : object;\n  let newObject = refObject;\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (newObject.hasOwnProperty(path)) {\n    delete newObject[path];\n    return refObject;\n  }\n\n  if (!isUndefined(get(newObject, path))) {\n    const segs = path.split(\".\");\n    let last = segs.pop() as string;\n\n    while (segs.length && segs[segs.length - 1].slice(-1) === \"\\\\\")\n      last = `${(segs.pop() as string).slice(0, -1)}.${last}`;\n\n    while (segs.length) newObject = newObject[(path = segs.shift() as string)];\n\n    delete newObject[last];\n  }\n\n  return refObject;\n};\n","export default (...args: any[]): void => {\n  if (__DEV__) console.warn(...args);\n};\n","import { useReducer, useRef, useCallback } from \"react\";\nimport { dequal } from \"dequal/lite\";\n\nimport {\n  Debug,\n  FormState,\n  FormStateReturn,\n  Map,\n  SetStateRef,\n  SetUsedStateRef,\n} from \"../types\";\nimport useLatest from \"./useLatest\";\nimport { get, getIsDirty, isEmptyObject, set } from \"../utils\";\n\nexport default <V>(\n  initialState: FormState<V>,\n  onChange?: Debug<V>\n): FormStateReturn<V> => {\n  const [, forceUpdate] = useReducer((c) => c + 1, 0);\n  const stateRef = useRef(initialState);\n  const usedStateRef = useRef<Map>({});\n  const onChangeRef = useLatest(onChange || (() => undefined));\n\n  const setStateRef = useCallback<SetStateRef>(\n    (path, value, { fieldPath, shouldUpdate = true } = {}) => {\n      const key = path.split(\".\")[0];\n\n      if (!key) {\n        if (!dequal(stateRef.current, value)) {\n          stateRef.current = value;\n          forceUpdate();\n          onChangeRef.current(stateRef.current);\n        }\n\n        return;\n      }\n\n      if (key === \"values\" || !dequal(get(stateRef.current, path), value)) {\n        const state = set(stateRef.current, path, value, true);\n        const {\n          errors,\n          dirtyFields,\n          isDirty: prevIsDirty,\n          isValid: prevIsValid,\n        } = state;\n        let { submitCount: prevSubmitCount } = state;\n        const isDirty =\n          key === \"dirtyFields\" ? getIsDirty(dirtyFields) : prevIsDirty;\n        const isValid = key === \"errors\" ? isEmptyObject(errors) : prevIsValid;\n        const submitCount =\n          key === \"isSubmitting\" && value\n            ? (prevSubmitCount += 1)\n            : prevSubmitCount;\n\n        stateRef.current = { ...state, isDirty, isValid, submitCount };\n\n        path = fieldPath || path;\n\n        if (\n          shouldUpdate &&\n          (Object.keys(usedStateRef.current).some(\n            (key) => path.startsWith(key) || key.startsWith(path)\n          ) ||\n            (usedStateRef.current.isDirty && isDirty !== prevIsDirty) ||\n            (usedStateRef.current.isValid && isValid !== prevIsValid))\n        ) {\n          forceUpdate();\n          onChangeRef.current(stateRef.current);\n        }\n      }\n    },\n    [onChangeRef]\n  );\n\n  const setUsedStateRef = useCallback<SetUsedStateRef>((path) => {\n    usedStateRef.current[path] = true;\n  }, []);\n\n  return { stateRef, setStateRef, setUsedStateRef };\n};\n","import { useEffect, useLayoutEffect } from \"react\";\n\nconst useIsoLayoutEffect =\n  typeof window === \"undefined\" ? useEffect : useLayoutEffect;\n\nexport default useIsoLayoutEffect;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { useCallback, useEffect, useRef } from \"react\";\n\nimport {\n  Config,\n  Controller,\n  Errors,\n  FieldArgs,\n  FieldElement,\n  FieldRef,\n  Fields,\n  FieldValidator,\n  FormState,\n  FormValues,\n  GetState,\n  Map,\n  Reset,\n  Return,\n  SetErrors,\n  SetFieldError,\n  SetFieldValue,\n  SetValues,\n  Submit,\n  ValidateField,\n  ValidateForm,\n} from \"./types\";\nimport { useIsoLayoutEffect, useLatest, useState } from \"./hooks\";\nimport {\n  arrayToMap,\n  deepMerge,\n  filterErrors,\n  get,\n  isCheckboxInput,\n  isEmptyObject,\n  isFieldElement,\n  isFileInput,\n  isFileList,\n  isFunction,\n  isInputElement,\n  isMultipleSelect,\n  isNumberInput,\n  isPlainObject,\n  isRadioInput,\n  isRangeInput,\n  isUndefined,\n  runWithLowPriority,\n  set,\n  setTrueValues,\n  unset,\n  warn,\n} from \"./utils\";\n\nexport default <V extends FormValues = FormValues>({\n  defaultValues = {} as V,\n  validate,\n  validateOnChange = true,\n  validateOnBlur = true,\n  removeUnmountedField = true,\n  ignoreFields = [],\n  onReset,\n  onSubmit,\n  onError,\n  debug,\n}: Config<V>): Return<V> => {\n  const isInitRef = useRef(true);\n  const formRef = useRef<HTMLFormElement>(null);\n  const fieldsRef = useRef<Fields>({});\n  const fieldArgsRef = useRef<FieldArgs>({});\n  const controllersRef = useRef<Map>({});\n  const ignoreFieldsRef = useRef<Map>(arrayToMap(ignoreFields));\n  const changedFieldRef = useRef<string>();\n  const formValidatorRef = useLatest(validate);\n  const fieldValidatorsRef = useRef<Record<string, FieldValidator<V>>>({});\n  const onResetRef = useLatest(onReset || (() => undefined));\n  const onSubmitRef = useLatest(onSubmit || (() => undefined));\n  const onErrorRef = useLatest(onError || (() => undefined));\n  const defaultValuesRef = useRef(defaultValues);\n  const initialStateRef = useRef<FormState<V>>({\n    values: defaultValuesRef.current,\n    touched: {},\n    errors: {},\n    isDirty: false,\n    dirtyFields: {},\n    isValidating: false,\n    isValid: true,\n    isSubmitting: false,\n    isSubmitted: false,\n    submitCount: 0,\n  });\n  const { stateRef, setStateRef, setUsedStateRef } = useState<V>(\n    initialStateRef.current,\n    debug\n  );\n\n  const getFields = useCallback(\n    (form: HTMLFormElement) =>\n      Array.from(form.querySelectorAll(\"input,textarea,select\"))\n        .filter((element) => {\n          const field = element as FieldElement;\n          const { type, name, dataset } = field;\n\n          if (/image|submit|reset/.test(type)) return false;\n          if (!name) {\n            warn('💡 react-cool-form > field: Missing the \"name\" attribute.');\n            return false;\n          }\n\n          return (\n            controllersRef.current[name] ||\n            !(dataset.rcfIgnore || ignoreFieldsRef.current[name])\n          );\n        })\n        .reduce((acc: Record<string, any>, cur) => {\n          const field = cur as FieldElement;\n          const { name } = field;\n\n          acc[name] = { ...acc[name], field: cur };\n\n          if (isCheckboxInput(field) || isRadioInput(field))\n            acc[name].options = acc[name].options\n              ? [...acc[name].options, cur]\n              : [cur];\n\n          return acc;\n        }, {}),\n    []\n  );\n\n  const getFieldNames = useCallback(\n    () => Object.keys({ ...fieldsRef.current, ...controllersRef.current }),\n    []\n  );\n\n  const handleUnset = useCallback(\n    (path: string, fieldPath: string, target: any, name: string) => {\n      setStateRef(path, unset(target, name, true), { fieldPath });\n    },\n    [setStateRef]\n  );\n\n  const fieldRef = useCallback<FieldRef<V>>(\n    (validateOrOptions) => (field) => {\n      if (\n        !field?.name ||\n        controllersRef.current[field.name] ||\n        ignoreFieldsRef.current[field.name]\n      )\n        return;\n\n      if (isFunction(validateOrOptions)) {\n        fieldValidatorsRef.current[field.name] = validateOrOptions;\n        return;\n      }\n\n      const { validate, ...parsers } = validateOrOptions;\n\n      if (validate) fieldValidatorsRef.current[field.name] = validate;\n      fieldArgsRef.current[field.name] = parsers;\n    },\n    []\n  );\n\n  const getNodeValue = useCallback(\n    (name: string) => {\n      const { field, options } = fieldsRef.current[name];\n      let value = field.value as any;\n\n      if (isInputElement(field)) {\n        if (fieldArgsRef.current[name]?.valueAsNumber) {\n          value = field.valueAsNumber;\n          return value;\n        }\n        if (fieldArgsRef.current[name]?.valueAsDate) {\n          value = field.valueAsDate;\n          return value;\n        }\n      }\n\n      if (isNumberInput(field) || isRangeInput(field))\n        value = field.valueAsNumber || \"\";\n\n      if (isCheckboxInput(field)) {\n        if (options) {\n          const checkboxs = options as HTMLInputElement[];\n\n          if (options.length > 1) {\n            value = checkboxs\n              .filter((checkbox) => checkbox.checked)\n              .map((checkbox) => checkbox.value);\n          } else {\n            value = checkboxs[0].checked;\n          }\n        } else {\n          let checkValues = get(stateRef.current.values, field.name);\n\n          if (Array.isArray(checkValues)) {\n            checkValues = new Set(checkValues);\n\n            if (field.checked) {\n              checkValues.add(value);\n            } else {\n              checkValues.delete(value);\n            }\n\n            value = Array.from(checkValues);\n          } else {\n            value = field.checked;\n          }\n        }\n      }\n\n      if (isRadioInput(field) && options)\n        value =\n          (options as HTMLInputElement[]).find((radio) => radio.checked)\n            ?.value || \"\";\n\n      if (isMultipleSelect(field) && !options)\n        value = Array.from(field.options)\n          .filter((option) => option.selected)\n          .map((option) => option.value);\n\n      if (isFileInput(field)) value = field.files;\n\n      return value;\n    },\n    [stateRef]\n  );\n\n  const setNodeValue = useCallback((name: string, value: any) => {\n    if (!fieldsRef.current[name] || controllersRef.current[name]) return;\n\n    const { field, options } = fieldsRef.current[name];\n\n    if (isCheckboxInput(field)) {\n      const checkboxs = options as HTMLInputElement[];\n\n      if (checkboxs.length > 1) {\n        checkboxs.forEach((checkbox) => {\n          checkbox.checked = Array.isArray(value)\n            ? value.includes(checkbox.value)\n            : !!value;\n        });\n      } else {\n        checkboxs[0].checked = !!value;\n      }\n    } else if (isRadioInput(field)) {\n      (options as HTMLInputElement[]).forEach((radio) => {\n        radio.checked = radio.value === value;\n      });\n    } else if (isMultipleSelect(field) && Array.isArray(value)) {\n      Array.from(field.options).forEach((option) => {\n        option.selected = !!value.includes(option.value);\n      });\n    } else if (isFileInput(field)) {\n      if (isFileList(value)) field.files = value;\n      if (!value) field.value = \"\";\n    } else {\n      field.value = value ?? \"\";\n    }\n  }, []);\n\n  const setDefaultValue = useCallback(\n    (name: string, value: any) => {\n      if (!isUndefined(get(initialStateRef.current.values, name))) return;\n\n      initialStateRef.current.values = set(\n        initialStateRef.current.values,\n        name,\n        value,\n        true\n      );\n\n      setStateRef(`values.${name}`, get(initialStateRef.current.values, name), {\n        shouldUpdate: !isInitRef.current,\n      });\n    },\n    [setStateRef]\n  );\n\n  const setAllNodesOrStateValue = useCallback(\n    (values: V, checkDefaultValues = false) =>\n      Object.values(fieldsRef.current).forEach(({ field: { name } }) => {\n        if (controllersRef.current[name]) return;\n\n        const value = get(values, name);\n\n        if (!isUndefined(value)) setNodeValue(name, value);\n\n        if (checkDefaultValues) {\n          const defaultValue = get(defaultValuesRef.current, name);\n\n          setDefaultValue(\n            name,\n            !isUndefined(defaultValue) ? defaultValue : getNodeValue(name)\n          );\n        }\n      }),\n    [getNodeValue, setDefaultValue, setNodeValue]\n  );\n\n  const getState = useCallback<GetState>(\n    (path, { target, watch = true, filterUntouchedError = true } = {}) => {\n      const getPath = (path: string) => {\n        if (path === \"values\" && !target && watch)\n          warn(\n            '💡 react-cool-form > getState: Get the \"values\" alone may cause unnecessary re-renders. If you know what you\\'re doing, please ignore this warning. See: https://react-cool-form.netlify.app/docs/form-state'\n          );\n\n        return target ? `${target}.${path}` : path;\n      };\n      const errorsEnhancer = (path: string, state: any) => {\n        if (\n          !watch ||\n          !filterUntouchedError ||\n          !path.startsWith(\"errors\") ||\n          !state ||\n          isEmptyObject(state)\n        )\n          return state;\n\n        path = path.replace(\"errors\", \"touched\");\n        setUsedStateRef(path);\n\n        return filterErrors(state, get(stateRef.current, path));\n      };\n      let state;\n\n      if (Array.isArray(path)) {\n        state = path.map((path) => {\n          path = getPath(path);\n          if (watch) setUsedStateRef(path);\n          return errorsEnhancer(path, get(stateRef.current, path));\n        });\n      } else if (isPlainObject(path)) {\n        const paths = path as Record<string, string>;\n        state = Object.keys(paths).reduce((state: Record<string, any>, key) => {\n          path = getPath(paths[key]);\n          if (watch) setUsedStateRef(path);\n          state[key] = errorsEnhancer(path, get(stateRef.current, path));\n          return state;\n        }, {});\n      } else {\n        path = getPath(path);\n        if (watch) setUsedStateRef(path);\n        state = errorsEnhancer(path, get(stateRef.current, path));\n      }\n\n      return state;\n    },\n    [setUsedStateRef, stateRef]\n  );\n\n  const setErrors = useCallback<SetErrors<V>>(\n    (errors) => {\n      setStateRef(\n        \"errors\",\n        (isFunction(errors) ? errors(stateRef.current.errors) : errors) || {}\n      );\n    },\n    [setStateRef, stateRef]\n  );\n\n  const setFieldError = useCallback<SetFieldError>(\n    (name, error) => {\n      error = isFunction(error)\n        ? error(get(stateRef.current.errors, name))\n        : error;\n\n      if (error) {\n        setStateRef(`errors.${name}`, error);\n      } else {\n        handleUnset(\"errors\", `errors.${name}`, stateRef.current.errors, name);\n      }\n    },\n    [handleUnset, setStateRef, stateRef]\n  );\n\n  const runBuiltInValidation = useCallback(\n    (name: string) => fieldsRef.current[name]?.field.validationMessage,\n    []\n  );\n\n  const runAllBuiltInValidation = useCallback(\n    () =>\n      Object.keys(fieldsRef.current).reduce((errors, name) => {\n        const error = runBuiltInValidation(name);\n        errors = { ...errors, ...(error ? set({}, name, error) : {}) };\n        return errors;\n      }, {}),\n    [runBuiltInValidation]\n  );\n\n  const runFieldValidation = useCallback(\n    async (name: string): Promise<any> => {\n      if (!fieldValidatorsRef.current[name]) return undefined;\n\n      try {\n        const error = await fieldValidatorsRef.current[name](\n          get(stateRef.current.values, name),\n          stateRef.current.values\n        );\n\n        return error;\n      } catch (exception) {\n        warn(`💡 react-cool-form > validate ${name}: `, exception);\n        throw exception;\n      }\n    },\n    [stateRef]\n  );\n\n  const runAllFieldsValidation = useCallback((): Promise<Errors<V>> => {\n    const promises = Object.keys(fieldValidatorsRef.current).map((name) =>\n      runFieldValidation(name)\n    );\n\n    return Promise.all(promises).then((errors) =>\n      Object.keys(fieldValidatorsRef.current).reduce((acc, cur, idx) => {\n        acc = { ...acc, ...(errors[idx] ? set({}, cur, errors[idx]) : {}) };\n        return acc;\n      }, {})\n    );\n  }, [runFieldValidation]);\n\n  const runFormValidation = useCallback(\n    async (name?: string): Promise<any> => {\n      if (!formValidatorRef.current) return name ? undefined : {};\n\n      try {\n        const errors = await formValidatorRef.current(stateRef.current.values);\n\n        if (name) return get(errors, name);\n\n        return isPlainObject(errors) ? errors : {};\n      } catch (exception) {\n        warn(`💡 react-cool-form > config.validate: `, exception);\n        throw exception;\n      }\n    },\n    [formValidatorRef, stateRef]\n  );\n\n  const validateField = useCallback<ValidateField>(\n    async (name) => {\n      setStateRef(\"isValidating\", true);\n\n      try {\n        const error =\n          (await runFormValidation(name)) ||\n          (await runFieldValidation(name)) ||\n          runBuiltInValidation(name);\n\n        setFieldError(name, error);\n        setStateRef(\"isValidating\", false);\n\n        return error;\n      } catch (exception) {\n        return exception;\n      }\n    },\n    [\n      runBuiltInValidation,\n      runFieldValidation,\n      runFormValidation,\n      setFieldError,\n      setStateRef,\n    ]\n  );\n\n  const validateFieldWithLowPriority = useCallback<ValidateField>(\n    (name) => runWithLowPriority(() => validateField(name)),\n    [validateField]\n  );\n\n  const validateForm = useCallback<ValidateForm<V>>(() => {\n    setStateRef(\"isValidating\", true);\n\n    return Promise.all([\n      runAllBuiltInValidation(),\n      runAllFieldsValidation(),\n      runFormValidation(),\n    ]).then((errors) => {\n      const errs = deepMerge(...errors);\n\n      setErrors(errs);\n      setStateRef(\"isValidating\", false);\n\n      return errs;\n    });\n  }, [\n    runAllBuiltInValidation,\n    runAllFieldsValidation,\n    runFormValidation,\n    setErrors,\n    setStateRef,\n  ]);\n\n  const validateFormWithLowPriority = useCallback<ValidateForm<V>>(\n    () => runWithLowPriority(validateForm),\n    [validateForm]\n  );\n\n  const setFieldDirty = useCallback(\n    (name: string) => {\n      if (\n        get(stateRef.current.values, name) !==\n        get(initialStateRef.current.values, name)\n      ) {\n        setStateRef(`dirtyFields.${name}`, true);\n      } else {\n        handleUnset(\n          \"dirtyFields\",\n          `dirtyFields.${name}`,\n          stateRef.current.dirtyFields,\n          name\n        );\n      }\n    },\n    [handleUnset, setStateRef, stateRef]\n  );\n\n  const setFieldTouched = useCallback(\n    (name: string, shouldValidate = validateOnBlur) => {\n      setStateRef(`touched.${name}`, true);\n\n      if (shouldValidate) validateFieldWithLowPriority(name);\n    },\n    [setStateRef, validateFieldWithLowPriority, validateOnBlur]\n  );\n\n  const setFieldTouchedMaybeValidate = useCallback(\n    (name) =>\n      setFieldTouched(\n        name,\n        validateOnChange ? name !== changedFieldRef.current : undefined\n      ),\n    [setFieldTouched, validateOnChange]\n  );\n\n  const setValues = useCallback<SetValues<V>>(\n    (\n      values,\n      {\n        shouldValidate = validateOnChange,\n        touchedFields = [],\n        dirtyFields = [],\n      } = {}\n    ) => {\n      values = isFunction(values) ? values(stateRef.current.values) : values;\n\n      setStateRef(\"values\", values);\n      setAllNodesOrStateValue(values);\n\n      if (touchedFields.length)\n        setStateRef(\n          \"touched\",\n          setTrueValues(\n            stateRef.current.touched,\n            isFunction(touchedFields)\n              ? touchedFields(getFieldNames())\n              : touchedFields\n          )\n        );\n      if (dirtyFields.length)\n        setStateRef(\n          \"dirtyFields\",\n          setTrueValues(\n            stateRef.current.dirtyFields,\n            isFunction(dirtyFields) ? dirtyFields(getFieldNames()) : dirtyFields\n          )\n        );\n      if (shouldValidate) validateFormWithLowPriority();\n    },\n    [\n      getFieldNames,\n      setAllNodesOrStateValue,\n      setStateRef,\n      stateRef,\n      validateFormWithLowPriority,\n      validateOnChange,\n    ]\n  );\n\n  const setFieldValue = useCallback<SetFieldValue>(\n    (\n      name,\n      value,\n      {\n        shouldValidate = validateOnChange,\n        shouldTouched = true,\n        shouldDirty = true,\n      } = {}\n    ) => {\n      value = isFunction(value)\n        ? value(get(stateRef.current.values, name))\n        : value;\n\n      if (!isUndefined(value)) {\n        setStateRef(`values.${name}`, value);\n      } else {\n        handleUnset(\"values\", `values.${name}`, stateRef.current.values, name);\n      }\n      setNodeValue(name, value);\n\n      if (shouldTouched) setFieldTouched(name, false);\n      if (shouldDirty) setFieldDirty(name);\n      if (shouldValidate) validateFieldWithLowPriority(name);\n    },\n    [\n      handleUnset,\n      setFieldDirty,\n      setFieldTouched,\n      setNodeValue,\n      setStateRef,\n      stateRef,\n      validateFieldWithLowPriority,\n      validateOnChange,\n    ]\n  );\n\n  const getOptions = useCallback(\n    () => ({\n      formState: stateRef.current,\n      setErrors,\n      setFieldError,\n      setValues,\n      setFieldValue,\n      validateForm,\n      validateField,\n      reset,\n      submit,\n    }),\n    [\n      // @ts-expect-error\n      reset,\n      setErrors,\n      setFieldError,\n      setFieldValue,\n      setValues,\n      stateRef,\n      // @ts-expect-error\n      submit,\n      validateField,\n      validateForm,\n    ]\n  );\n\n  const reset: Reset<V> = useCallback(\n    (values, exclude, e) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      const state = { ...stateRef.current };\n      const skip = arrayToMap(exclude || []);\n\n      Object.keys(state).forEach((key) => {\n        if (skip[key]) return;\n\n        if (key === \"values\") {\n          values =\n            (isFunction(values) ? values(stateRef.current.values) : values) ||\n            initialStateRef.current.values;\n\n          state[key] = values;\n          setAllNodesOrStateValue(values);\n        } else {\n          // @ts-expect-error\n          state[key] = initialStateRef.current[key];\n        }\n      });\n\n      setStateRef(\"\", state);\n      onResetRef.current(state.values, getOptions(), e);\n    },\n    [getOptions, onResetRef, setAllNodesOrStateValue, setStateRef, stateRef]\n  );\n\n  const submit: Submit<V> = useCallback(\n    async (e) => {\n      e?.preventDefault();\n      e?.stopPropagation();\n\n      const { touched, values } = stateRef.current;\n\n      setStateRef(\"touched\", setTrueValues(touched, getFieldNames()));\n      setStateRef(\"isSubmitting\", true);\n\n      try {\n        const errors = await validateForm();\n\n        if (!isEmptyObject(errors)) {\n          onErrorRef.current(errors, getOptions(), e);\n\n          return { errors };\n        }\n\n        await onSubmitRef.current(values, getOptions(), e);\n        setStateRef(\"isSubmitted\", true);\n\n        return { values };\n      } catch (exception) {\n        warn(`💡 react-cool-form > submit: `, exception);\n        throw exception;\n      } finally {\n        setStateRef(\"isSubmitting\", false);\n      }\n    },\n    [\n      getFieldNames,\n      getOptions,\n      onErrorRef,\n      onSubmitRef,\n      setStateRef,\n      stateRef,\n      validateForm,\n    ]\n  );\n\n  const handleChangeEvent = useCallback(\n    (name: string, value: any) => {\n      setStateRef(`values.${name}`, value);\n      setFieldDirty(name);\n\n      if (validateOnChange) validateFieldWithLowPriority(name);\n    },\n    [setFieldDirty, setStateRef, validateFieldWithLowPriority, validateOnChange]\n  );\n\n  const controller = useCallback<Controller<V>>(\n    (\n      name,\n      { validate, value, defaultValue, parse, format, onChange, onBlur } = {}\n    ) => {\n      if (!name) {\n        warn('💡 react-cool-form > controller: Missing the \"name\" parameter.');\n        return undefined;\n      }\n\n      controllersRef.current[name] = true;\n      if (validate) fieldValidatorsRef.current[name] = validate;\n\n      const val = get(defaultValuesRef.current, name);\n      defaultValue = !isUndefined(val) ? val : defaultValue;\n      if (!isUndefined(defaultValue)) setDefaultValue(name, defaultValue);\n\n      value = !isUndefined(value) ? value : getState(`values.${name}`);\n      value = (format ? format(value) : value) ?? \"\";\n\n      return {\n        name,\n        value,\n        onChange: (e) => {\n          const value =\n            e.nativeEvent instanceof Event && isFieldElement(e.target)\n              ? getNodeValue(name)\n              : e;\n\n          handleChangeEvent(name, parse ? parse(value) : value);\n          if (onChange) onChange(e, value);\n          changedFieldRef.current = name;\n        },\n        onBlur: (e) => {\n          setFieldTouchedMaybeValidate(name);\n          if (onBlur) onBlur(e);\n          changedFieldRef.current = undefined;\n        },\n      };\n    },\n    [\n      getNodeValue,\n      getState,\n      handleChangeEvent,\n      setDefaultValue,\n      setFieldTouchedMaybeValidate,\n    ]\n  );\n\n  useIsoLayoutEffect(() => {\n    if (!formRef.current) return;\n\n    fieldsRef.current = getFields(formRef.current);\n    setAllNodesOrStateValue(initialStateRef.current.values, true);\n    isInitRef.current = false;\n  }, [getFields, setAllNodesOrStateValue]);\n\n  useEffect(() => {\n    if (!formRef.current) return () => null;\n\n    const handleChange = ({ target }: Event) => {\n      const { name } = target as FieldElement;\n\n      if (!name) {\n        warn('💡 react-cool-form > field: Missing the \"name\" attribute.');\n        return;\n      }\n\n      if (fieldsRef.current[name] && !controllersRef.current[name]) {\n        const parse = fieldArgsRef.current[name]?.parse;\n        const value = getNodeValue(name);\n\n        handleChangeEvent(name, parse ? parse(value) : value);\n        changedFieldRef.current = name;\n      }\n    };\n\n    const handleBlur = ({ target }: Event) => {\n      if (!isFieldElement(target as HTMLElement)) return;\n\n      const { name } = target as FieldElement;\n\n      if (fieldsRef.current[name] && !controllersRef.current[name]) {\n        setFieldTouchedMaybeValidate(name);\n        changedFieldRef.current = undefined;\n      }\n    };\n\n    const handleSubmit = (e: Event) => submit(e as any);\n\n    const handleReset = (e: Event) => reset(null, null, e as any);\n\n    const form = formRef.current;\n    form.addEventListener(\"input\", handleChange);\n    form.addEventListener(\"focusout\", handleBlur);\n    form.addEventListener(\"submit\", handleSubmit);\n    form.addEventListener(\"reset\", handleReset);\n\n    const observer = new MutationObserver(([{ type }]) => {\n      if (type !== \"childList\") return;\n\n      const fields = getFields(form);\n      let { values } = stateRef.current;\n\n      if (removeUnmountedField)\n        Object.keys(fieldsRef.current).forEach((name) => {\n          if (fields[name]) return;\n\n          handleUnset(\n            \"values\",\n            `values.${name}`,\n            stateRef.current.values,\n            name\n          );\n          handleUnset(\n            \"touched\",\n            `touched.${name}`,\n            stateRef.current.touched,\n            name\n          );\n          handleUnset(\n            \"dirtyFields\",\n            `dirtyFields.${name}`,\n            stateRef.current.dirtyFields,\n            name\n          );\n          handleUnset(\n            \"errors\",\n            `errors.${name}`,\n            stateRef.current.errors,\n            name\n          );\n\n          initialStateRef.current.values = unset(\n            initialStateRef.current.values,\n            name,\n            true\n          );\n\n          delete fieldArgsRef.current[name];\n          delete fieldValidatorsRef.current[name];\n          delete controllersRef.current[name];\n        });\n\n      let isAdd = false;\n\n      Object.keys(fields).forEach((name) => {\n        if (fieldsRef.current[name] || controllersRef.current[name]) return;\n\n        const defaultValue = get(defaultValuesRef.current, name);\n\n        if (!isUndefined(defaultValue))\n          values = set(values, name, defaultValue, true);\n\n        isAdd = true;\n      });\n\n      fieldsRef.current = fields;\n      if (isAdd) setAllNodesOrStateValue(values, true);\n    });\n    observer.observe(form, { childList: true, subtree: true });\n\n    return () => {\n      form.removeEventListener(\"input\", handleChange);\n      form.removeEventListener(\"focusout\", handleBlur);\n      form.removeEventListener(\"submit\", handleSubmit);\n      form.removeEventListener(\"reset\", handleReset);\n      observer.disconnect();\n    };\n  }, [\n    getFields,\n    getNodeValue,\n    handleChangeEvent,\n    handleUnset,\n    removeUnmountedField,\n    reset,\n    setAllNodesOrStateValue,\n    setFieldTouchedMaybeValidate,\n    stateRef,\n    submit,\n  ]);\n\n  return {\n    form: formRef,\n    field: fieldRef,\n    getState,\n    setErrors,\n    setFieldError,\n    setValues,\n    setFieldValue,\n    validateForm,\n    validateField,\n    reset,\n    submit,\n    controller,\n  };\n};\n"],"names":["val","ref","useRef","useEffect","current","array","reduce","obj","key","value","FileList","cloneObject","object","isObject","isFileList","Date","getTime","Array","isArray","map","Object","keys","Error","deepMerge","objects","prev","forEach","prevValue","currValue","undefined","filterErrors","error","touched","isPlainObject","nextErrors","isUndefined","path","defaultValue","split","filter","Boolean","getIsDirty","search","found","values","push","length","field","type","element","test","tagName","callback","window","requestIdleCallback","start","now","setTimeout","didTimeout","timeRemaining","Math","max","timeout","immutable","TypeError","segs","String","newObject","slice","idx","next","Number","isInteger","names","name","set","refObject","hasOwnProperty","get","last","pop","shift","__DEV__","console","warn","initialState","onChange","useReducer","c","forceUpdate","stateRef","usedStateRef","onChangeRef","useLatest","setStateRef","useCallback","fieldPath","shouldUpdate","dequal","state","errors","dirtyFields","prevIsDirty","isDirty","prevIsValid","isValid","prevSubmitCount","submitCount","isEmptyObject","some","startsWith","setUsedStateRef","useIsoLayoutEffect","useLayoutEffect","defaultValues","validate","validateOnChange","validateOnBlur","removeUnmountedField","ignoreFields","onReset","onSubmit","onError","debug","isInitRef","formRef","fieldsRef","fieldArgsRef","controllersRef","ignoreFieldsRef","arrayToMap","changedFieldRef","formValidatorRef","fieldValidatorsRef","onResetRef","onSubmitRef","onErrorRef","defaultValuesRef","initialStateRef","isValidating","isSubmitting","isSubmitted","useState","getFields","form","from","querySelectorAll","dataset","rcfIgnore","acc","cur","isCheckboxInput","isRadioInput","options","getFieldNames","handleUnset","target","unset","fieldRef","validateOrOptions","isFunction","parsers","getNodeValue","isInputElement","valueAsNumber","valueAsDate","isNumberInput","isRangeInput","checkboxs","checkbox","checked","checkValues","Set","add","find","radio","isMultipleSelect","option","selected","isFileInput","files","setNodeValue","includes","setDefaultValue","setAllNodesOrStateValue","checkDefaultValues","getState","watch","filterUntouchedError","getPath","errorsEnhancer","replace","paths","setErrors","setFieldError","runBuiltInValidation","validationMessage","runAllBuiltInValidation","runFieldValidation","exception","runAllFieldsValidation","promises","Promise","all","then","runFormValidation","validateField","validateFieldWithLowPriority","runWithLowPriority","validateForm","errs","validateFormWithLowPriority","setFieldDirty","setFieldTouched","shouldValidate","setFieldTouchedMaybeValidate","setValues","touchedFields","setTrueValues","setFieldValue","shouldTouched","shouldDirty","getOptions","formState","reset","submit","exclude","e","preventDefault","stopPropagation","skip","handleChangeEvent","controller","parse","format","onBlur","nativeEvent","Event","isFieldElement","handleChange","handleBlur","handleSubmit","handleReset","addEventListener","observer","MutationObserver","fields","isAdd","observe","childList","subtree","removeEventListener","disconnect"],"mappings":"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"}